name: To-Do App CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  IMAGE_NAME: ike20743/todo-app
  K8S_NAMESPACE: default

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for docker/metadata-action

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Run unit tests
        run: ./mvnw test

      - name: Build application
        run: ./mvnw clean package -DskipTests

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl cluster-info

      - name: Verify cluster access
        run: kubectl get nodes

      - name: Deploy database
        run: |
          kubectl apply -f kubernetes/secret.yaml
          kubectl apply -f kubernetes/postgres-pvc.yaml
          kubectl apply -f kubernetes/postgres-deployment.yaml
          kubectl apply -f kubernetes/postgres-service.yaml
          kubectl wait --for=condition=ready pod -l app=postgres --timeout=300s

      - name: Deploy application
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl rollout status deployment/todo-app --timeout=300s

      - name: Verify deployment
        run: |
          kubectl get pods,svc -o wide
          kubectl logs -l app=todo-app --tail=50
          echo "Application URL: $(kubectl get svc todo-app-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')"