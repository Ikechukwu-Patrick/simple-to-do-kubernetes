name: To-Do App CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  IMAGE_NAME: ike20743/todo-app  # Updated to your Docker Hub username
  K8S_NAMESPACE: default  # Or your preferred namespace

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run unit tests
        run: ./mvnw test

      - name: Build application
        run: ./mvnw clean package -DskipTests

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "$KUBE_CONFIG" > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl version --client

      - name: Deploy to Kubernetes
        run: |
          # Apply database resources first
          kubectl apply -f kubernetes/secret.yaml
          kubectl apply -f kubernetes/postgres-pvc.yaml
          kubectl apply -f kubernetes/postgres-deployment.yaml
          kubectl apply -f kubernetes/postgres-service.yaml
          
          # Wait for PostgreSQL to be ready
          kubectl wait --for=condition=ready pod -l app=postgres \
            --timeout=300s \
            --namespace=$K8S_NAMESPACE
          
          # Deploy the application
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          
          # Verify deployment
          kubectl rollout status deployment/todo-app \
            --timeout=300s \
            --namespace=$K8S_NAMESPACE
          
          # Get service info
          kubectl get services -o wide --namespace=$K8S_NAMESPACE
          
          # Optional: Print pod logs for verification
          kubectl get pods --namespace=$K8S_NAMESPACE
          kubectl logs -l app=todo-app --namespace=$K8S_NAMESPACE --tail=50